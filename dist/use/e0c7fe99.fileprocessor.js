"use strict";var debug=require("debug")("fileprocessor"),File=require("./file"),_=require("lodash"),_defaultPatterns={html:[[/<script.+src=['"]([^"']+)["']/gm,"Update the HTML to reference our concat/min/revved script files"],[/<link[^\>]+href=['"]([^"']+)["']/gm,"Update the HTML with the new css filenames"],[/<img[^\>]*[^\>\S]+src=['"]([^"']+)["']/gm,"Update the HTML with the new img filenames"],[/<video[^\>]+src=['"]([^"']+)["']/gm,"Update the HTML with the new video filenames"],[/<video[^\>]+poster=['"]([^"']+)["']/gm,"Update the HTML with the new poster filenames"],[/<source[^\>]+src=['"]([^"']+)["']/gm,"Update the HTML with the new source filenames"],[/data-main\s*=['"]([^"']+)['"]/gm,"Update the HTML with data-main tags",function(a){return a.match(/\.js$/)?a:a+".js"},function(a){return a.replace(".js","")}],[/data-(?!main).[^=]+=['"]([^'"]+)['"]/gm,"Update the HTML with data-* tags"],[/url\(\s*['"]?([^"'\)]+)["']?\s*\)/gm,"Update the HTML with background imgs, case there is some inline style"],[/<a[^\>]+href=['"]([^"']+)["']/gm,"Update the HTML with anchors images"],[/<input[^\>]+src=['"]([^"']+)["']/gm,"Update the HTML with reference in input"],[/<meta[^\>]+content=['"]([^"']+)["']/gm,"Update the HTML with the new img filenames in meta tags"],[/<object[^\>]+data=['"]([^"']+)["']/gm,"Update the HTML with the new object filenames"],[/<image[^\>]*[^\>\S]+xlink:href=['"]([^"']+)["']/gm,"Update the HTML with the new image filenames for svg xlink:href links"],[/<image[^\>]*[^\>\S]+src=['"]([^"']+)["']/gm,"Update the HTML with the new image filenames for src links"],[/<(?:img|source)[^\>]*[^\>\S]+srcset=['"]([^"'\s]+)(?:\s\d[mx])["']/gm,"Update the HTML with the new image filenames for srcset links"]],css:[[/(?:src=|url\(\s*)['"]?([^'"\)(\?|#)]+)['"]?\s*\)?/gm,"Update the CSS to reference our revved images"]],json:[[/:\s*['"]([^"']+)["']/gm,"Update the json value to reference our revved url"]]},defaultBlockReplacements={css:function(a){var b=a.media?' media="'+a.media+'"':"";return'<link rel="stylesheet" href="'+a.dest+'"'+b+">"},js:function(a){var b=a.defer?"defer ":"",c=a.async?"async ":"";return"<script "+b+c+'src="'+a.dest+'"></script>'}},FileProcessor=module.exports=function(a,b,c,d){if(!a)throw new Error("No pattern given");if(_.isString(a)){if(!_.contains(_.keys(_defaultPatterns),a))throw new Error("Unsupported pattern: "+a);this.patterns=_defaultPatterns[a]}else this.patterns=a;if(this.log=c||function(){},!b)throw new Error("Missing parameter: finder");this.finder=b,this.blockReplacements=_.assign({},defaultBlockReplacements),d&&_.keys(d).length>0&&_.assign(this.blockReplacements,d)};FileProcessor.prototype.replaceBlocks=function(a){var b=a.content,c=/\r\n/g.test(b)?"\r\n":"\n";return a.blocks.forEach(function(a){var d=a.raw.join(c);b=b.replace(d,this.replaceWith(a))},this),b},FileProcessor.prototype.replaceWith=function(a){var b,c=a.conditionalStart?a.conditionalStart+"\n"+a.indent:"",d=a.conditionalEnd?"\n"+a.indent+a.conditionalEnd:"";return b="undefined"==typeof a.src||null===a.src||0===a.src.length?"":_.contains(_.keys(this.blockReplacements),a.type)?a.indent+c+this.blockReplacements[a.type](a)+d:""},FileProcessor.prototype.replaceWithRevved=function(a,b){var c=this,d=a,e=this.patterns,f=function(a){return a};return e.forEach(function(a){var e=a[2]||f,g=a[3]||f;c.log(a[1]),d=d.replace(a[0],function(a,d){function f(a){return-1!=a.indexOf("?v=")?a.substring(0,a.indexOf("?v=")):a}var h=e(d);debug("Let's replace "+d),debug("Looking for revved version of "+h+" in ",b);var i=/\$\{(stylePath|scriptLocation)}\//,j="${stylePath}/",k=-1!=h.indexOf("${"),h=f(h.replace(i,"")),l=c.finder.find(h,b);if(console.log(l),debug("Found file '%s'",l),"/"===d)return a;var m=a.replace(d,g(l));if(h!==l&&c.log(a+" changed to "+m),-1!=m.indexOf("link")&&k){var n=m.split('href="');return console.log(m),n[0]+'href="'+j+n[1]}if(-1!=m.indexOf("script")&&k){var n=m.split('src="');return n[0]+'src="'+j+n[1]}return m})}),d},FileProcessor.prototype.process=function(a,b){debug("processing file %s",a,b),_.isString(a)?this.file=new File(a):this.file=a,b&&0!==b.length&&(this.file.searchPath=b);var c=this.replaceWithRevved(this.replaceBlocks(this.file),this.file.searchPath);return c};